[gd_scene load_steps=8 format=3 uid="uid://dk0pp5g6t740n"]

[ext_resource type="Script" path="res://LlmScript2.cs" id="1_x83fi"]
[ext_resource type="PackedScene" uid="uid://cpi4mfj8m8x15" path="res://UI/Scenes/CharacterBox.tscn" id="2_50ek7"]
[ext_resource type="Resource" uid="uid://c85fgma4bl85u" path="res://Gameplay/Scenarios/Lexmark/Scenario_Lexmark.tres" id="2_aerms"]
[ext_resource type="Script" path="res://UI/Scripts/StartSceneButton.cs" id="3_8m1c2"]
[ext_resource type="Texture2D" uid="uid://cu8p7haj6bqlf" path="res://Art/Backdrops/courtroom-1.png" id="3_o353x"]
[ext_resource type="FontFile" uid="uid://7eqpm3yt2bgl" path="res://UI/Resources/Fonts/CourierPrime-Regular.ttf" id="4_fu4su"]
[ext_resource type="AudioStream" uid="uid://bjo3qteohi4f6" path="res://UI/Resources/Music/Phoenix Wright_ Ace Attorney - Court is Now in Session 4.mp3" id="6_1hkro"]

[node name="Node2D" type="Node2D"]

[node name="LlmManager" type="Node2D" parent="."]
unique_name_in_owner = true
script = ExtResource("1_x83fi")
SystemPrompt = "You are the AI director and writer of an educational visual novel-style video game about court cases. You respond in a specific grammar that is interpreted by a video game frontend. Your responses affect the course of the game. The game follows reenactments of real court scenarios. You will be suplied background information and the events that have transpired in court. You should follow loosely these events when deciding how to influence the game and characters.

Here is the grammar that you should follow when the video game frontend asks for an event: {grammar}
Always follow the presented format.

General rules:
- You need to follow the instructions very closely. Do only what you're told. Do not include previous lines or events in the current events.
- Do not reference any other characters other than the ones provided below, and only reference them by their Codename!
- As a general law, the player should be given many opportunities to present their point of view, even if their intervention doesn't follow the usual court procedures.
- Characters must keep in character at all times. Do not attempt to correct a player misunderstanding.
- Characters may not submit any documents or perform any other actions other than speak.
- Characters should refer to other Characters by their public name in their lines.

Here is an example of a properly-formatted CharacterReply:

Codename: PlaintiffLawyer
LookingAtCodename: Judge [can only be one]
Emotion: neutral
Line: Your Honor, I believe we must address the anti-circumvention aspects of the lawsuit first."
Scenario = ExtResource("2_aerms")

[node name="CanvasLayer" type="CanvasLayer" parent="."]
script = ExtResource("3_8m1c2")

[node name="RichTextLabel" type="RichTextLabel" parent="CanvasLayer"]
clip_contents = false
offset_left = 1420.0
offset_right = 1920.0
offset_bottom = 60.0
theme_override_fonts/normal_font = ExtResource("4_fu4su")
theme_override_font_sizes/normal_font_size = 30
text = "Press 'Esc' to leave game.
Press 'm' to toggle music."
fit_content = true

[node name="TextureRect" type="TextureRect" parent="CanvasLayer"]
z_index = -1000
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_default_cursor_shape = 13
texture = ExtResource("3_o353x")
expand_mode = 3

[node name="CharacterBox" parent="CanvasLayer" node_paths=PackedStringArray("LlmManager") instance=ExtResource("2_50ek7")]
unique_name_in_owner = true
visible = false
mouse_default_cursor_shape = 6
LlmManager = NodePath("../../LlmManager")

[node name="StartButton" type="Button" parent="CanvasLayer"]
z_index = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 805.0
offset_top = 453.0
offset_right = -805.0
offset_bottom = -453.0
grow_horizontal = 2
grow_vertical = 2
theme_override_font_sizes/font_size = 81
text = "Start"

[node name="InGameMusic" type="AudioStreamPlayer" parent="."]
stream = ExtResource("6_1hkro")
volume_db = -20.0
parameters/looping = true

[connection signal="pressed" from="CanvasLayer/StartButton" to="LlmManager" method="NewReply"]
[connection signal="pressed" from="CanvasLayer/StartButton" to="CanvasLayer" method="StartScenePressed"]
